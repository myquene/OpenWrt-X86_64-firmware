#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: 0 20 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update
        #sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* moby* snap*
        sudo -E apt -y full-upgrade
        sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E systemctl daemon-reload
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo -E timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: Cache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt     

    - name: Update feeds
      run: |
        cd openwrt
        sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Change default theme
      run: |
        cd openwrt
        sed -i 's/luci-theme-bootstrap/luci-theme-design/g' feeds/luci/collections/luci/Makefile
        sed -i 's/luci-theme-bootstrap/luci-theme-design/g' feeds/luci/collections/luci-nginx/Makefile
        sed -i 's/luci-theme-bootstrap/luci-theme-design/g' feeds/luci/collections/luci-ssl-nginx/Makefile
        sed -i 's/luci-theme-bootstrap/luci-theme-design/g' feeds/luci/collections/luci-ssl-openssl/Makefile
        
    - name: Generate configuration file
      run: |
        cd openwrt
        rm -f ./.config*
        touch ./.config
        #
        # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
        # 
        cat >> .config <<EOF
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y
        CONFIG_PACKAGE_6in4=y
        # CONFIG_PACKAGE_UnblockNeteaseMusic-Go is not set
        # CONFIG_PACKAGE_amdgpu-firmware is not set
        # CONFIG_PACKAGE_bnx2-firmware is not set
        # CONFIG_PACKAGE_bnx2x-firmware is not set
        CONFIG_PACKAGE_ip6tables=y
        # CONFIG_PACKAGE_iptables-mod-ipsec is not set
        CONFIG_PACKAGE_ipv6helper=y
        # CONFIG_PACKAGE_kmod-amd-xgbe is not set
        # CONFIG_PACKAGE_kmod-bnx2 is not set
        # CONFIG_PACKAGE_kmod-bnx2x is not set
        # CONFIG_PACKAGE_kmod-crypto-cbc is not set
        # CONFIG_PACKAGE_kmod-crypto-deflate is not set
        # CONFIG_PACKAGE_kmod-crypto-des is not set
        # CONFIG_PACKAGE_kmod-crypto-echainiv is not set
        # CONFIG_PACKAGE_kmod-crypto-hmac is not set
        # CONFIG_PACKAGE_kmod-crypto-md5 is not set
        # CONFIG_PACKAGE_kmod-drm-amdgpu is not set
        CONFIG_PACKAGE_kmod-ip6tables=y
        # CONFIG_PACKAGE_kmod-ipsec is not set
        # CONFIG_PACKAGE_kmod-ipt-ipsec is not set
        CONFIG_PACKAGE_kmod-ipt-nat6=y
        CONFIG_PACKAGE_kmod-iptunnel=y
        # CONFIG_PACKAGE_kmod-iptunnel6 is not set
        # CONFIG_PACKAGE_kmod-lib-crc32c is not set
        CONFIG_PACKAGE_kmod-nf-ipt6=y
        CONFIG_PACKAGE_kmod-nf-log6=y
        CONFIG_PACKAGE_kmod-nf-nat6=y
        CONFIG_PACKAGE_kmod-nf-reject6=y
        CONFIG_PACKAGE_kmod-sit=y
        # CONFIG_PACKAGE_libminiupnpc is not set
        # CONFIG_PACKAGE_libnatpmp is not set
        # CONFIG_PACKAGE_luci-app-accesscontrol is not set
        # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
        # CONFIG_PACKAGE_luci-app-unblockmusic is not set
        # CONFIG_PACKAGE_luci-app-unblockmusic_INCLUDE_UnblockNeteaseMusic_Go is not set
        # CONFIG_PACKAGE_luci-app-xlnetacc is not set
        # CONFIG_PACKAGE_luci-app-zerotier is not set
        CONFIG_PACKAGE_luci-proto-ipv6=y
        CONFIG_PACKAGE_odhcp6c=y
        CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
        CONFIG_PACKAGE_odhcpd-ipv6only=y
        CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
        # CONFIG_PACKAGE_strongswan is not set
        # CONFIG_PACKAGE_zerotier is not set
        CONFIG_TARGET_KERNEL_PARTSIZE=200
        CONFIG_TARGET_ROOTFS_PARTSIZE=1000
        # CONFIG_VMDK_IMAGES is not set
        EOF
        #
        # ===============================================================
        # 
        sed -i 's/^[ \t]*//g' ./.config
        make defconfig
  
    - name: Download package
      run: |
        cd openwrt
        make download -j8

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin

    - name: Prepare artifact
      run: |
        cd openwrt
        mkdir -p ./artifact/package
        mkdir -p ./artifact/buildinfo
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/    

    - name: Upload buildinfo
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_buildinfo
        path: ./openwrt/artifact/buildinfo/
  
    - name: Upload firmware
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_firmware
        path: ./openwrt/bin/targets/

    - name: Generate Release Tag
      id: tag
      run: |
        echo "release_tag=OpenWrt_X86_64_$(date +"%Y-%m-%d_%H_%M")" >> $GITHUB_OUTPUT
        
        echo "## 更新内容" >> release.txt
        echo "Openwrt 最新提交内容： " >> release.txt     
        cd openwrt
        git log -n 1 >> release.txt
        git log --oneline -n 10 >> release.txt
        cat release.txt
        ls -al
          
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload Firmware To Release
      uses: softprops/action-gh-release@v0.1.15
      env:
         GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        tag_name: ${{steps.tag.outputs.release_tag}}
        body_path: release.txt
        files: ./openwrt/bin/targets/x86/64/*

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
