#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: 0 20 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: "Optimize Disk Space"
      uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
      with:
        operate_sudo: "True"
        general_include: ".+"
        general_exclude: |-
          ^GCC$
          ^G\+\+$
          Clang
          LLVM
        docker_include: ".+"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        homebrew_prune: "True"
        homebrew_clean: "True"
        npm_prune: "True"
        npm_clean: "True"
        os_swap: "True"

    - name: Freeing up disk space
      uses: easimon/maximize-build-space@master
      with: 
        root-reserve-mb: 2048
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="
        
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |     
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-pyelftools \
        libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
        vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo rm -rf /etc/apt/sources.list.d/* /usr/local/lib/android /opt/ghc /usr/share/dotnet /usr/local/graalvm /usr/local/.ghcup \
        /usr/local/share/powershell /usr/local/share/chromium /usr/local/lib/node_modules
        sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

    - name: Clone source code
      working-directory: ./
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        #ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: Cache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt     

    - name: Update feeds
      run: |
        cd openwrt
        sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
        sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' ./feeds.conf.default
        sed -i '$a src-git small https://github.com/kenzok8/small' ./feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Change default theme
      run: |
        cd openwrt
        sed -i 's/luci-theme-bootstrap/luci-theme-design/g' feeds/luci/collections/luci/Makefile
        sed -i 's/luci-theme-bootstrap/luci-theme-design/g' feeds/luci/collections/luci-nginx/Makefile
        sed -i 's/luci-theme-bootstrap/luci-theme-design/g' feeds/luci/collections/luci-ssl-nginx/Makefile
        sed -i 's/luci-theme-bootstrap/luci-theme-design/g' feeds/luci/collections/luci-ssl-openssl/Makefile
        
    - name: Generate configuration file
      run: |
        cd openwrt
        rm -f ./.config*
        touch ./.config
        #
        # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
        # 
        cat >> .config <<EOF
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y
        CONFIG_PACKAGE_6in4=y
        CONFIG_PACKAGE_adguardhome=y
        CONFIG_PACKAGE_boost=y
        CONFIG_PACKAGE_boost-program_options=y
        CONFIG_PACKAGE_boost-system=y
        CONFIG_PACKAGE_coreutils-nohup=y
        CONFIG_PACKAGE_haproxy=y
        CONFIG_PACKAGE_ip6tables=y
        CONFIG_PACKAGE_ipt2socks=y
        CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
        CONFIG_PACKAGE_iptables-mod-iprange=y
        CONFIG_PACKAGE_iptables-mod-socket=y
        CONFIG_PACKAGE_ipv6helper=y
        CONFIG_PACKAGE_kmod-inet-diag=y
        CONFIG_PACKAGE_kmod-ip6tables=y
        CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
        CONFIG_PACKAGE_kmod-ipt-iprange=y
        CONFIG_PACKAGE_kmod-ipt-nat6=y
        CONFIG_PACKAGE_kmod-ipt-socket=y
        CONFIG_PACKAGE_kmod-iptunnel=y
        CONFIG_PACKAGE_kmod-iptunnel4=y
        CONFIG_PACKAGE_kmod-netlink-diag=y
        CONFIG_PACKAGE_kmod-nf-ipt6=y
        CONFIG_PACKAGE_kmod-nf-log6=y
        CONFIG_PACKAGE_kmod-nf-nat6=y
        CONFIG_PACKAGE_kmod-nf-reject6=y
        CONFIG_PACKAGE_kmod-nf-socket=y
        CONFIG_PACKAGE_kmod-sit=y
        CONFIG_PACKAGE_libltdl=y
        CONFIG_PACKAGE_liblua5.3=y
        CONFIG_PACKAGE_libstdcpp=y
        # CONFIG_PACKAGE_luci-app-accesscontrol is not set
        CONFIG_PACKAGE_luci-app-adguardhome=y
        CONFIG_PACKAGE_luci-app-passwall=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Haproxy=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Client=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Client=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Server=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Simple_Obfs=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_SingBox=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_Plus=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Plugin=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=y
        CONFIG_PACKAGE_luci-app-passwall_Iptables_Transparent_Proxy=y
        CONFIG_PACKAGE_luci-app-smartdns=y
        # CONFIG_PACKAGE_luci-app-unblockmusic_INCLUDE_UnblockNeteaseMusic_Go is not set
        CONFIG_PACKAGE_luci-i18n-adguardhome-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
        CONFIG_PACKAGE_luci-i18n-smartdns-zh-cn=y
        CONFIG_PACKAGE_luci-proto-ipv6=y
        CONFIG_PACKAGE_luci-theme-argon=y
        CONFIG_PACKAGE_odhcp6c=y
        CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
        CONFIG_PACKAGE_odhcpd-ipv6only=y
        CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
        CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
        CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
        CONFIG_PACKAGE_sing-box=y
        CONFIG_PACKAGE_smartdns=y
        CONFIG_PACKAGE_trojan-plus=y
        CONFIG_PACKAGE_unzip=y
        CONFIG_PACKAGE_v2ray-geoip=y
        CONFIG_PACKAGE_v2ray-geosite=y
        CONFIG_PACKAGE_v2ray-plugin=y
        CONFIG_SING_BOX_WITH_CLASH_API=y
        CONFIG_SING_BOX_WITH_DHCP=y
        CONFIG_SING_BOX_WITH_ECH=y
        CONFIG_SING_BOX_WITH_GVISOR=y
        CONFIG_SING_BOX_WITH_QUIC=y
        CONFIG_SING_BOX_WITH_UTLS=y
        CONFIG_SING_BOX_WITH_WIREGUARD=y
        CONFIG_TARGET_KERNEL_PARTSIZE=200
        CONFIG_TARGET_ROOTFS_PARTSIZE=1000
        # CONFIG_VMDK_IMAGES is not set
        CONFIG_boost-compile-visibility-hidden=y
        CONFIG_boost-runtime-shared=y
        CONFIG_boost-static-and-shared-libs=y
        CONFIG_boost-variant-release=y
        EOF
        #
        # ===============================================================
        # 
        sed -i 's/^[ \t]*//g' ./.config
        make defconfig
  
    - name: Download package
      run: |
        cd openwrt
        make download -j16

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin

    - name: Prepare artifact
      run: |
        cd openwrt
        mkdir -p ./artifact/package
        mkdir -p ./artifact/buildinfo
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/    

    - name: Upload buildinfo
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_buildinfo
        path: ./openwrt/artifact/buildinfo/
  
    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_firmware
        path: ./openwrt/bin/targets/

    - name: Generate Release Tag
      id: tag
      run: |
        echo "release_tag=OpenWrt_X86_64_$(date +"%Y-%m-%d_%H_%M")" >> $GITHUB_OUTPUT
        
        cd openwrt
        echo "## 更新内容" >> release.txt
        echo ">具体修改" >> release.txt 
        git log --oneline -n 10 --pretty=format:"%an: %s" >> release.txt
        
        cat release.txt
        ls -al
          
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload Firmware To Release
      uses: softprops/action-gh-release@v0.1.15
      env:
         GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        tag_name: ${{steps.tag.outputs.release_tag}}
        body_path: ./openwrt/release.txt
        files: ./openwrt/bin/targets/x86/64/*

    - name: Delete old releases and workflows runs
      uses: ophub/delete-releases-workflows@main
      with:
        delete_releases: true
        releases_keep_latest: 3
        delete_workflows: true
        workflows_keep_day: 5
        gh_token: ${{ secrets.REPO_TOKEN }}
